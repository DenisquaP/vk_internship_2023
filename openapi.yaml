openapi: 3.0.0
info:
  title: Friends-service
  description: A friends service for vk internship.
  version: 0.0.1
servers:
  - url: http://localhost:8000/
    description: A dev server
paths:
  /users/:
    get:
      summary: Returns a list of users
      operationId: getAllUsers
      tags: 
        - Users
      responses:
        '200':
          description: A JSON array of users 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                id: 1
                username: Denis
        'default':
          description: A some Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Creates a user
      operationId: postUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '201':
          description: Successful creation of a user 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        'default':
          description: A some Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          
  /users/{user_id}/:
    get:
      summary: Returns a user by id
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          required: true
          description: A user id
          schema:
           type: integer
      tags: 
        - Users
      responses:
        '200':
          description: A JSON array of user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        'default':
          description: A some Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Changes a user by id
      operationId: updateUserById
      parameters:
        - name: user_id
          in: path
          required: true
          description: A user id
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      tags: 
        - Users
      responses:
        '200':
          description: A changed user info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        'default':
          description: A some Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{user_id}/friends/:
    get:
      summary: Returns a user's friends by user_id
      operationId: getUsersFriendsById
      parameters:
        - name: user_id
          in: path
          required: true
          description: A user id
          schema:
            type: integer
      tags: 
        - Friends
      responses:
        '200':
          description: A JSON array of user's friends
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friends"
        'default':
          description: A some Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
    
  /users/{user_id}/friends/requests/{type_of}/:
    get:
      summary: Returns a list of friend requests by type
      operationId: getRequestsById
      parameters:
        - name: user_id
          in: path
          required: true
          description: A user id
          schema:
            type: integer
        - name: type_of
          in: path
          required: true
          description: The operation type
          schema:
            type: string
            enum: ["incoming", "outcoming"]
      tags:
        - Friends
      responses:
        '200':
          description: A JSON array of user's friend requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invites"
        'default':
          description: A some Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{user_id}/friends/{friend_id}/delete/:
    delete:
      summary: Deletes friend
      operationId: deleteFriend
      parameters:
        - name: user_id
          in: path
          required: true
          description: A user id
          schema:
            type: integer
        - name: friend_id
          in: path
          required: true
          description: A friend id
          schema:
            type: integer
      tags:
        - Friends
      responses:
        '204':
          description: An empty JSON array
          content:
            application/json: {}
        'default':
          description: A some Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{user_id}/friends/{friend_id}/status/:
    get:
      summary: Get a friends status with another user
      operationId: getFriendStatus
      parameters:
        - name: user_id
          in: path
          required: true
          description: A user id
          schema:
            type: integer
        - name: friend_id
          in: path
          required: true
          description: A friend id
          schema:
            type: integer
      tags:
        - Friends
      responses:
        '204':
          description: A JSON with friend status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"

  /users/{user_id}/friends/{friend_id}/send_request/:
    POST:
      summary: Get a friends status with another user
      operationId: sendFriendRequest
      parameters:
        - name: user_id
          in: path
          required: true
          description: A user id
          schema:
            type: integer
        - name: friend_id
          in: path
          required: true
          description: A friend id
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invite"
      tags:
        - Friends
      responses:
        '201':
          description: A JSON with friend status
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/FriendshipRequest'
                  - $ref: '#/components/schemas/Friendship'
                
  /users/{user_id}/friends/{friend_id}/answer_request/{type_of}:
    POST:
      summary: Answer a friend request
      operationId: answerFriendRequest
      parameters:
        - name: user_id
          in: path
          required: true
          description: A user id
          schema:
            type: integer
        - name: friend_id
          in: path
          required: true
          description: A friend id
          schema:
            type: integer
        - name: type_of
          in: path
          required: true
          description: The operation type
          schema:
            type: string
            enum: ["incoming", "outcoming"]
      requestBody:
        required: true
        content:
          application/json:
            schema: {}
      tags:
        - Friends
      responses:
        '201':
          description: A JSON with friend status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friendship'
        '200':
          description: An empty JSON array
          content:
            application/json: {}
        
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - description

    User:
      type: object
      required: 
        - id
        - username
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"

    Friend:
      type: object
      required: 
        - id
        - user_id
        - friend_id
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          description: User id whose this friend 
        friend_id:
          type: integer
    Friends:
      type: array
      items:
        $ref: "#/components/schemas/Friend"
        
    Invite:
      type: object
      required: 
        - id
        - from_user
        - to_user
      properties:
        id:
          type: integer
          format: int64
        from_user:
          type: integer
          description: User id who send a request
        to_user:
          type: integer
          description: User id to whom a request was sended
    Invites:
      type: array
      items:
        $ref: "#/components/schemas/Invite"
        
    Status:
      type: object
      required: 
        - message
      properties:
        message:
          type: string
          
    FriendshipRequest:
      type: object
      properties:
        id:
          type: integer
        from:
          $ref: '#/components/schemas/User'
        to:
          $ref: '#/components/schemas/User'
    Friendship:
      type: object
      properties:
        id:
          type: integer
        user1:
          $ref: '#/components/schemas/User'
        user2:
          $ref: '#/components/schemas/User'
      